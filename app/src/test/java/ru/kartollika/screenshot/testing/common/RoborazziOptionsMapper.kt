package ru.kartollika.screenshot.testing.common

import com.github.takahirom.roborazzi.ExperimentalRoborazziApi
import com.github.takahirom.roborazzi.RoborazziOptions
import sergio.sastre.composable.preview.scanner.android.AndroidPreviewInfo
import sergio.sastre.composable.preview.scanner.core.preview.ComposablePreview
import sergio.sastre.composable.preview.scanner.core.preview.getAnnotation

/**
 * To tune the RoborazziOptions for autogenerated previews,
 * use and add required parameters to [ru.kartollika.screenshot.testing.common.PreviewRoborazziOptions] annotation
 *
 * You should add mapping from annotation config to Roborazzi config on your demand
 */
@OptIn(ExperimentalRoborazziApi::class)
@Suppress("UnusedParameter", "UnusedPrivateProperty")
object RoborazziOptionsMapper {

  fun createFor(preview: ComposablePreview<AndroidPreviewInfo>): RoborazziOptions {
    val roborazziConfig =
      parseRoborazziOptionsFromPreview(preview) ?: return DefaultRoborazziOptions
    return DefaultRoborazziOptions.copy()
  }

  private fun parseRoborazziOptionsFromPreview(
    preview: ComposablePreview<AndroidPreviewInfo>,
  ): PreviewRoborazziOptions? {
    return preview.getAnnotation<PreviewRoborazziOptions>()
  }
}
